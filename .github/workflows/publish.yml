name: Publish to npm

on:
  push:
    branches: [ publish ]
  pull_request:
    branches: [ publish ]

jobs:
  prebuild:
    runs-on: ${{ matrix.os }}
    if: >-  
      !contains(github.event.head_commit.message, 'ci skip') &&
      !contains(github.event.head_commit.message, 'skip ci')

    strategy:
      fail-fast: true
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
        node-version: [14.x]

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Checkout submodules
      run: git submodule update --init --recursive

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - name: Get npm cache directory and npm cache hash key (Posix)
      if: runner.os != 'Windows'
      run: |
        echo "npm_cache_dir=$(npm config get cache)" >> $GITHUB_ENV
        echo "npm_cache_hash=$(shasum -a 256 package-lock.json | cut -d " " -f 1)" >> $GITHUB_ENV

    - name: Get npm cache directory and npm cache hash key (Windows)
      if: runner.os == 'Windows'
      run: |
        echo "npm_cache_dir=$(npm config get cache)" >> ${{ env.GITHUB_ENV }}
        echo "npm_cache_hash=$(Get-FileHash package-lock.json | Select-Object -ExpandProperty Hash)" >> ${{ env.GITHUB_ENV }}

    - name: Try to cache
      uses: actions/cache@v2
      with:
        path: ${{ env.npm_cache_dir }}
        key: ${{ runner.os }}-node-${{ env.npm_cache_hash }}

    - name: Install dependencies (Posix)
      if: runner.os != 'Windows'
      run: SKIP_BUILD=1 npm ci

    - name: Install dependencies (Windows)
      if: runner.os == 'Windows'
      run: $env:SKIP_BUILD=1; npm ci; Remove-Item Env:\SKIP_BUILD

    - name: Install cross-compiling tools
      if: runner.os == 'Linux'
      run: sudo apt-get install g++-multilib

    - name: Prebuild using prebuildify for x86-32
      run: npm run prebuildify -- --arch ia32

    - name: Prebuild using prebuildify for x86-64
      run: npm run prebuildify -- --arch x64

    - name: Upload prebuilts
      uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.os }}-prebuilt
        path: prebuilds
      
  publish:
    runs-on: ubuntu-latest
    needs: prebuild
    
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Use Node.js 14.x
      uses: actions/setup-node@v1
      with:
        node-version: 14.x
        registry-url: 'https://registry.npmjs.org'

    - name: Get npm cache directory and npm cache hash key (Posix)
      run: |
        echo "npm_cache_dir=$(npm config get cache)" >> $GITHUB_ENV
        echo "npm_cache_hash=$(shasum -a 256 package-lock.json | cut -d " " -f 1)" >> $GITHUB_ENV

    - name: Try to cache
      uses: actions/cache@v2
      with:
        path: ${{ env.npm_cache_dir }}
        key: ${{ runner.os }}-node-${{ env.npm_cache_hash }}

    - name: Install dependencies
      run: SKIP_BUILD=1 npm ci

    - name: Transpile typescript
      run: npm run gen-js

    - name: Download prebuilts
      uses: actions/download-artifact@v2
      with:
        path: prebuilds

    - name: Merge prebuilts' directories
      run: mv prebuilds/*/* prebuilds && find prebuilds -empty -type d -delete

    - name: List all prebuilts
      run: find prebuilds | sed -e 's;[^/]*/;|____;g;s;____|; |;g'

    - name: Publish to npm
      run: npm publish
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}